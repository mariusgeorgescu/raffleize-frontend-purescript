-- File auto generated by purescript-bridge! --
module RaffleizeDApp.CustomTypes.ActionTypes where

import Data.Argonaut.Aeson.Decode.Generic (genericDecodeAeson)
import Data.Argonaut.Aeson.Encode.Generic (genericEncodeAeson)
import Data.Argonaut.Aeson.Options as Argonaut
import Data.Argonaut.Decode.Class (class DecodeJson, class DecodeJsonField, decodeJson)
import Data.Argonaut.Encode.Class (class EncodeJson, encodeJson)
import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Prim (String)
import RaffleizeDApp.CustomTypes.RaffleTypes (RaffleConfig)
import Type.Proxy (Proxy(Proxy))

import Prelude

data UserAction =
    CreateRaffle RaffleConfig
  | BuyTicket String

instance encodeJsonUserAction :: EncodeJson UserAction where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonUserAction :: DecodeJson UserAction where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericUserAction :: Generic UserAction _

--------------------------------------------------------------------------------
_CreateRaffle :: Prism' UserAction RaffleConfig
_CreateRaffle = prism' CreateRaffle f
  where
    f (CreateRaffle a) = Just $ a
    f _ = Nothing

_BuyTicket :: Prism' UserAction String
_BuyTicket = prism' BuyTicket f
  where
    f (BuyTicket a) = Just $ a
    f _ = Nothing

--------------------------------------------------------------------------------
data TicketOwnerAction =
    RevealTicketSecret String
  | CollectStake
  | RefundTicket
  | RefundTicketExtra
  | RefundCollateralLosing

instance encodeJsonTicketOwnerAction :: EncodeJson TicketOwnerAction where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonTicketOwnerAction :: DecodeJson TicketOwnerAction where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericTicketOwnerAction :: Generic TicketOwnerAction _

--------------------------------------------------------------------------------
_RevealTicketSecret :: Prism' TicketOwnerAction String
_RevealTicketSecret = prism' RevealTicketSecret f
  where
    f (RevealTicketSecret a) = Just $ a
    f _ = Nothing

_CollectStake :: Prism' TicketOwnerAction Unit
_CollectStake = prism' (\_ -> CollectStake) f
  where
    f CollectStake = Just unit
    f _ = Nothing

_RefundTicket :: Prism' TicketOwnerAction Unit
_RefundTicket = prism' (\_ -> RefundTicket) f
  where
    f RefundTicket = Just unit
    f _ = Nothing

_RefundTicketExtra :: Prism' TicketOwnerAction Unit
_RefundTicketExtra = prism' (\_ -> RefundTicketExtra) f
  where
    f RefundTicketExtra = Just unit
    f _ = Nothing

_RefundCollateralLosing :: Prism' TicketOwnerAction Unit
_RefundCollateralLosing = prism' (\_ -> RefundCollateralLosing) f
  where
    f RefundCollateralLosing = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
data RaffleOwnerAction =
    Update RaffleConfig
  | Cancel
  | RecoverStake
  | RecoverStakeAndAmount
  | CollectAmount
  | GetCollateraOfExpiredTicket

instance encodeJsonRaffleOwnerAction :: EncodeJson RaffleOwnerAction where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonRaffleOwnerAction :: DecodeJson RaffleOwnerAction where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericRaffleOwnerAction :: Generic RaffleOwnerAction _

--------------------------------------------------------------------------------
_Update :: Prism' RaffleOwnerAction RaffleConfig
_Update = prism' Update f
  where
    f (Update a) = Just $ a
    f _ = Nothing

_Cancel :: Prism' RaffleOwnerAction Unit
_Cancel = prism' (\_ -> Cancel) f
  where
    f Cancel = Just unit
    f _ = Nothing

_RecoverStake :: Prism' RaffleOwnerAction Unit
_RecoverStake = prism' (\_ -> RecoverStake) f
  where
    f RecoverStake = Just unit
    f _ = Nothing

_RecoverStakeAndAmount :: Prism' RaffleOwnerAction Unit
_RecoverStakeAndAmount = prism' (\_ -> RecoverStakeAndAmount) f
  where
    f RecoverStakeAndAmount = Just unit
    f _ = Nothing

_CollectAmount :: Prism' RaffleOwnerAction Unit
_CollectAmount = prism' (\_ -> CollectAmount) f
  where
    f CollectAmount = Just unit
    f _ = Nothing

_GetCollateraOfExpiredTicket :: Prism' RaffleOwnerAction Unit
_GetCollateraOfExpiredTicket = prism' (\_ -> GetCollateraOfExpiredTicket) f
  where
    f GetCollateraOfExpiredTicket = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
data AdminAction =
    CloseRaffle

instance encodeJsonAdminAction :: EncodeJson AdminAction where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonAdminAction :: DecodeJson AdminAction where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericAdminAction :: Generic AdminAction _

--------------------------------------------------------------------------------
_CloseRaffle :: Prism' AdminAction Unit
_CloseRaffle = prism' (\_ -> CloseRaffle) f
  where
    f CloseRaffle = Just unit

--------------------------------------------------------------------------------
data RaffleizeAction =
    User UserAction
  | TicketOwner TicketOwnerAction
  | RaffleOwner RaffleOwnerAction
  | Admin AdminAction

instance encodeJsonRaffleizeAction :: EncodeJson RaffleizeAction where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonRaffleizeAction :: DecodeJson RaffleizeAction where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericRaffleizeAction :: Generic RaffleizeAction _

--------------------------------------------------------------------------------
_User :: Prism' RaffleizeAction UserAction
_User = prism' User f
  where
    f (User a) = Just $ a
    f _ = Nothing

_TicketOwner :: Prism' RaffleizeAction TicketOwnerAction
_TicketOwner = prism' TicketOwner f
  where
    f (TicketOwner a) = Just $ a
    f _ = Nothing

_RaffleOwner :: Prism' RaffleizeAction RaffleOwnerAction
_RaffleOwner = prism' RaffleOwner f
  where
    f (RaffleOwner a) = Just $ a
    f _ = Nothing

_Admin :: Prism' RaffleizeAction AdminAction
_Admin = prism' Admin f
  where
    f (Admin a) = Just $ a
    f _ = Nothing

--------------------------------------------------------------------------------
