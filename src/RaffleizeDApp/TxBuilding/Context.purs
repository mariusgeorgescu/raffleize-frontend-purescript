-- File auto generated by purescript-bridge! --
module RaffleizeDApp.TxBuilding.Context where

import Data.Argonaut.Aeson.Decode.Generic (genericDecodeAeson)
import Data.Argonaut.Aeson.Encode.Generic (genericEncodeAeson)
import Data.Argonaut.Aeson.Options as Argonaut
import Data.Argonaut.Decode.Class (class DecodeJson, class DecodeJsonField, decodeJson)
import Data.Argonaut.Encode.Class (class EncodeJson, encodeJson)
import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe, Maybe(..))
import Data.Newtype (class Newtype)
import Prim (Array, String)
import Type.Proxy (Proxy(Proxy))

import Prelude

newtype UserAddresses =
    UserAddresses {
      usedAddresses :: Array String
    , changeAddress :: String
    , reservedCollateral :: Maybe String
    }

instance encodeJsonUserAddresses :: EncodeJson UserAddresses where
  encodeJson = genericEncodeAeson Argonaut.defaultOptions
instance decodeJsonUserAddresses :: DecodeJson UserAddresses where
  decodeJson = genericDecodeAeson Argonaut.defaultOptions
derive instance genericUserAddresses :: Generic UserAddresses _
derive instance newtypeUserAddresses :: Newtype UserAddresses _

--------------------------------------------------------------------------------
_UserAddresses :: Iso' UserAddresses { usedAddresses :: Array String, changeAddress :: String, reservedCollateral :: Maybe String}
_UserAddresses = _Newtype

--------------------------------------------------------------------------------
